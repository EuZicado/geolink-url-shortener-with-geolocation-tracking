{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/db.ts"],"sourcesContent":["interface LocationData {\n  lat: number;\n  lng: number;\n  accuracy?: number;\n}\n\ninterface LogEntry {\n  timestamp: Date;\n  location?: LocationData;\n  userAgent?: string;\n  ip?: string;\n}\n\ninterface LinkData {\n  originalUrl: string;\n  createdAt: Date;\n  logs: LogEntry[];\n}\n\n// In-memory storage for demonstration\nconst linkStore: Map<string, LinkData> = new Map();\n\nexport function addLink(shortCode: string, originalUrl: string): void {\n  try {\n    linkStore.set(shortCode, {\n      originalUrl,\n      createdAt: new Date(),\n      logs: []\n    });\n  } catch (error) {\n    console.error('Error adding link:', error);\n    throw new Error('Failed to store link');\n  }\n}\n\nexport function getLink(shortCode: string): LinkData | undefined {\n  try {\n    return linkStore.get(shortCode);\n  } catch (error) {\n    console.error('Error retrieving link:', error);\n    return undefined;\n  }\n}\n\nexport function addLog(shortCode: string, log: Omit<LogEntry, 'timestamp'>): void {\n  try {\n    const linkData = linkStore.get(shortCode);\n    if (linkData) {\n      linkData.logs.push({\n        ...log,\n        timestamp: new Date()\n      });\n    }\n  } catch (error) {\n    console.error('Error adding log:', error);\n    throw new Error('Failed to log data');\n  }\n}\n\nexport function generateShortCode(): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  for (let i = 0; i < 8; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n}\n\nexport function getAllLinks(): Map<string, LinkData> {\n  return new Map(linkStore);\n}\n"],"names":[],"mappings":";;;;;;;AAmBA,sCAAsC;AACtC,MAAM,YAAmC,IAAI;AAEtC,SAAS,QAAQ,SAAiB,EAAE,WAAmB;IAC5D,IAAI;QACF,UAAU,GAAG,CAAC,WAAW;YACvB;YACA,WAAW,IAAI;YACf,MAAM,EAAE;QACV;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,SAAS,QAAQ,SAAiB;IACvC,IAAI;QACF,OAAO,UAAU,GAAG,CAAC;IACvB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;IACT;AACF;AAEO,SAAS,OAAO,SAAiB,EAAE,GAAgC;IACxE,IAAI;QACF,MAAM,WAAW,UAAU,GAAG,CAAC;QAC/B,IAAI,UAAU;YACZ,SAAS,IAAI,CAAC,IAAI,CAAC;gBACjB,GAAG,GAAG;gBACN,WAAW,IAAI;YACjB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,SAAS;IACd,MAAM,QAAQ;IACd,IAAI,SAAS;IACb,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;QAC1B,UAAU,MAAM,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,MAAM;IAChE;IACA,OAAO;AACT;AAEO,SAAS;IACd,OAAO,IAAI,IAAI;AACjB","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/verify/%5BshortCode%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { getLink } from '@/lib/db'\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { shortCode: string } }\n) {\n  try {\n    const { shortCode } = params\n\n    if (!shortCode || typeof shortCode !== 'string') {\n      return NextResponse.json(\n        { error: 'Short code is required' },\n        { status: 400 }\n      )\n    }\n\n    const linkData = getLink(shortCode)\n\n    if (!linkData) {\n      return NextResponse.json(\n        { error: 'Short code not found' },\n        { status: 404 }\n      )\n    }\n\n    return NextResponse.json({\n      originalUrl: linkData.originalUrl,\n      createdAt: linkData.createdAt,\n      visitCount: linkData.logs.length\n    })\n\n  } catch (error) {\n    console.error('Error verifying short code:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAAqC;IAE7C,IAAI;QACF,MAAM,EAAE,SAAS,EAAE,GAAG;QAEtB,IAAI,CAAC,aAAa,OAAO,cAAc,UAAU;YAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAyB,GAClC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,WAAW,CAAA,GAAA,kHAAA,CAAA,UAAO,AAAD,EAAE;QAEzB,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAuB,GAChC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,aAAa,SAAS,WAAW;YACjC,WAAW,SAAS,SAAS;YAC7B,YAAY,SAAS,IAAI,CAAC,MAAM;QAClC;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}